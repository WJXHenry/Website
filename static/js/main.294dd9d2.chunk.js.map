{"version":3,"sources":["components/TypographyTransitions.js","pages/HomePage.js","Phaser/Scenes/Movement.js","Phaser/Utils/gameSettings.js","Phaser/Scenes/MainMenu.js","Phaser/Scenes/Settings.js","Phaser/Game.js","pages/MazeGamePage.js","App.js","serviceWorker.js","index.js","common/colours.js"],"names":["typographyStyles","makeStyles","root","color","TypographyFade","props","delay","timeout","other","Object","objectWithoutProperties","classes","react_default","a","createElement","Fade","in","style","transitionDelay","Typography","assign","className","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","TypographyTyped","Typist_default","avgTypingDelay","startDelay","HomePage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","height","setState","objectSpread","window","innerHeight","Grid","container","justify","direction","padding","justifyContent","width","innerWidth","item","align","variant","Component","Movement","sprite","y","x","load","setBaseURL","image","cameras","main","setBackgroundColor","counter","keys","input","keyboard","addKeys","up","down","left","right","addKey","on","scene","start","player","add","console","log","isDown","updateMovement","Phaser","Scene","getDimensions","game","screenLength","config","screenSpaceUnit","screenCenter","textSize1","textSize2","textSize3","MainMenu","data","settings","maxGridSize","minGridSize","gridSize","maxSideLength","minSideLength","sideLength","gameMode","WHITE","arrowUp","arrowDown","select","gameDimensions","choice","scenes","text","fontFamily","fill","BLACK","fontSize","setOrigin","startGame","GOLD","exit","options","Input","Keyboard","JustDown","updateChoice","newChoice","length","setFill","Settings","arrowLeft","arrowRight","gameModes","concat","menuReturn","updateSelection","updateGridSize","updateSideLength","updateGameMode","newGridSize","setText","newSideLength","newGameMode","Game","dimension","_getDimensions","type","AUTO","parent","pixelArt","physics","default","arcade","gravity","id","React","MazeGamePage","Game_Game","App","react_router_dom","basename","process","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","GRAY"],"mappings":"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","file":"static/js/main.294dd9d2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Fade, Typography } from '@material-ui/core';\nimport Typist from 'react-typist';\nimport 'react-typist/dist/Typist.css';\n\n// Define the styling for all the Typography components with transitions here\nconst typographyStyles = makeStyles({\n  root: {\n    // color: '#2088FF',\n    color: '#555555'\n  }\n});\n\nTypographyFade.propTypes = {\n  delay: PropTypes.number,\n  timeout: PropTypes.number\n};\n\nexport function TypographyFade(props) {\n  const { delay, timeout, ...other } = props;\n  const classes = typographyStyles();\n  return (\n    <Fade in style={{ transitionDelay: delay }} timeout={timeout}>\n      <Typography className={classes.root} {...other} />\n    </Fade>\n  );\n}\n\nTypographyTyped.propTypes = {\n  delay: PropTypes.number\n};\n\nconst cursor = {\n  show: true,\n  blink: true,\n  element: '|',\n  hideWhenDone: true,\n  hideWhenDoneDelay: 8000\n};\n\nexport function TypographyTyped(props) {\n  const { delay, ...other } = props;\n  const classes = typographyStyles();\n  return (\n    <Typography className={classes.root} {...other}>\n      <Typist\n        avgTypingDelay={35}\n        cursor={cursor}\n        startDelay={delay}\n        {...other}\n      />\n    </Typography>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core/';\nimport {\n  TypographyFade,\n  TypographyTyped\n} from '../components/TypographyTransitions';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: props.height\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      height: window.innerHeight\n    });\n  }\n\n  render() {\n    return (\n      <Grid\n        container\n        // alignItems=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n        style={{\n          padding: '5vw',\n          justifyContent: 'flex-end',\n          height: window.innerHeight,\n          width: window.innerWidth\n        }}\n      >\n        <Grid item>\n          <TypographyFade align=\"left\" variant=\"h1\" timeout={500}>\n            {'Henry Wee'}\n          </TypographyFade>\n          <TypographyTyped align=\"left\" delay={500} variant=\"h3\">\n            {'> Software Engineering Student'}\n          </TypographyTyped>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  height: PropTypes.number\n};\n\nexport default HomePage;\n","import Phaser from 'phaser';\n\nexport default class Movement extends Phaser.Scene {\n  constructor() {\n    super('Movement');\n  }\n\n  updateMovement(sprite, direction) {\n    if (direction === 'up') {\n      sprite.y -= 2;\n      if (sprite.y < 0) {\n        sprite.y = 0;\n      }\n    } else if (direction === 'down') {\n      sprite.y += 2;\n      if (sprite.y > 600) {\n        sprite.y = 600;\n      }\n    } else if (direction === 'left') {\n      sprite.x -= 2;\n      if (sprite.x < 0) {\n        sprite.x = 0;\n      }\n    } else if (direction === 'right') {\n      sprite.x += 2;\n      if (sprite.x > 800) {\n        sprite.x = 800;\n      }\n    }\n  }\n\n  // redrawRect(prevPos, newPos, drawGraphics, redrawGraphics) {\n  //   let prevRect = new Phaser.Geom.Rectangle(prevPos.x, prevPos.y, 20, 20);\n  //   let newRect = new Phaser.Geom.Rectangle(newPos.x, newPos.y, 20, 20);\n  //   redrawGraphics.fillRectShape(prevRect);\n  //   drawGraphics.fillRectShape(newRect);\n  // }\n\n  preload() {\n    this.load.setBaseURL(\n      'https://raw.githubusercontent.com/wjxhenry/website/master'\n    );\n    // Load assets\n    this.load.image('player', 'assets/test/red.png');\n  }\n\n  create() {\n    // this.cameras.main.setBackgroundColor('rgba(125,0,255,1)'); // Set rgb background colour\n    // this.cameras.main.setBackgroundColor('#800080');\n    // this.cameras.main.setBackgroundColor('#ffffff');\n    this.cameras.main.setBackgroundColor('#000000');\n    this.counter = 0;\n    this.keys = this.input.keyboard.addKeys({\n      up: 'W',\n      down: 'S',\n      left: 'A',\n      right: 'D'\n    });\n    // this.playerPos = { x: 0, y: 0 };\n    var keyObj = this.input.keyboard.addKey('ESC');\n    keyObj.on('down', () => {\n      this.scene.start('MainMenu');\n      //   Fix the issue where there are multiple logs??\n    });\n    this.player = this.add.sprite(0, 0, 'player');\n    console.log('Start Movement');\n    // keyObj.on('up', event => {\n    //   console.log('W key up');\n    // });\n  }\n\n  update() {\n    this.counter++;\n    if (this.counter % 1 === 0) {\n      // Clock updates every 60 seconds\n      // console.log(\"Tick\")\n      this.counter = 0; // Reset counter (just in case of overflow?)\n      if (this.keys.up.isDown) {\n        console.log('Up');\n        this.updateMovement(this.player, 'up');\n      }\n      if (this.keys.down.isDown) {\n        console.log('Down');\n        this.updateMovement(this.player, 'down');\n      }\n      if (this.keys.left.isDown) {\n        console.log('Left');\n        this.updateMovement(this.player, 'left');\n      }\n      if (this.keys.right.isDown) {\n        console.log('Right');\n        this.updateMovement(this.player, 'right');\n      }\n      // console.log(this.playerPos);\n    }\n    // console.log(\"TestScene: update\")\n  }\n}\n","/**\n * Returns custom dimensions for the game instance\n * @param {Phaser.Game} game The Phaser Game object\n * @returns {Object} The custom dimensions object\n */\nexport function getDimensions(game) {\n  const screenLength = game.config.width;\n  return {\n    screenLength,\n    screenSpaceUnit: screenLength / 20,\n    screenCenter: screenLength / 2,\n    textSize1: screenLength / 10,\n    textSize2: screenLength / 15,\n    textSize3: screenLength / 18\n  };\n}\n\n/**\n * The initial settings for the game (game configs)\n * @returns {Object} The initial/default settings for the game configurations\n */\nexport function initSettings() {\n  return {\n    maxGridSize: 35,\n    minGridSize: 10,\n    gridSize: 20,\n    maxSideLength: 15,\n    minSideLength: 10,\n    sideLength: 10,\n    gameMode: 0\n  };\n}\n","import Phaser from 'phaser';\nimport { initSettings, getDimensions } from '../Utils/gameSettings';\nimport { BLACK, GOLD, WHITE } from '../../common/colours';\n\nexport default class MainMenu extends Phaser.Scene {\n  constructor() {\n    super('MainMenu');\n  }\n\n  init(data) {\n    this.settings = { ...initSettings(), ...data };\n  }\n\n  preload() {\n    this.load.setBaseURL(\n      'https://raw.githubusercontent.com/wjxhenry/website/master'\n    );\n    // Load assets...\n  }\n\n  create() {\n    this.cameras.main.setBackgroundColor(WHITE);\n    this.keys = this.input.keyboard.addKeys({\n      up: 'W',\n      arrowUp: 'up',\n      down: 'S',\n      arrowDown: 'down',\n      select: 'Enter'\n    });\n\n    this.gameDimensions = getDimensions(this.game);\n\n    this.choice = 0;\n    this.scenes = ['StartGame', 'Settings', 'Movement'];\n\n    let title = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 4,\n      'Yet Another Maze',\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize2\n      }\n    );\n    title.setOrigin(0.5, 0.5);\n    let startGame = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 8,\n      'Start Game',\n      {\n        fontFamily: 'Ubuntu',\n        fill: GOLD,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    startGame.setOrigin(0.5, 0.5);\n    let settings = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 12,\n      'Settings',\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    settings.setOrigin(0.5, 0.5);\n    let exit = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 16,\n      'Exit',\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    exit.setOrigin(0.5, 0.5);\n\n    this.options = [\n      { text: startGame, scene: 'StartGame' },\n      { text: settings, scene: 'Settings' },\n      { text: exit, scene: 'Movement' }\n    ];\n  }\n\n  update() {\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.up) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowUp)\n    ) {\n      this.updateChoice(-1);\n    }\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.down) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowDown)\n    ) {\n      this.updateChoice(1);\n    }\n    if (Phaser.Input.Keyboard.JustDown(this.keys.select)) {\n      this.scene.start(this.options[this.choice].scene, this.settings);\n    }\n  }\n\n  updateChoice(direction) {\n    let newChoice = this.choice + direction;\n    if (newChoice > -1 && newChoice < this.options.length) {\n      this.options[this.choice].text.setFill(BLACK);\n      this.options[newChoice].text.setFill(GOLD);\n      this.choice = newChoice;\n    }\n  }\n}\n","import Phaser from 'phaser';\nimport { getDimensions } from '../Utils/gameSettings';\nimport { BLACK, GOLD, WHITE } from '../../common/colours';\n\nexport default class Settings extends Phaser.Scene {\n  constructor() {\n    super('Settings');\n  }\n\n  init(data) {\n    this.settings = data;\n  }\n\n  preload() {\n    this.load.setBaseURL(\n      'https://raw.githubusercontent.com/wjxhenry/website/master'\n    );\n    // Load assets...\n  }\n\n  create() {\n    this.cameras.main.setBackgroundColor(WHITE);\n    this.keys = this.input.keyboard.addKeys({\n      up: 'W',\n      arrowUp: 'up',\n      down: 'S',\n      arrowDown: 'down',\n      left: 'A',\n      arrowLeft: 'left',\n      right: 'D',\n      arrowRight: 'right',\n      select: 'Enter'\n    });\n\n    this.gameDimensions = getDimensions(this.game);\n\n    this.gameModes = ['Solo', 'Two Player', 'Race', 'Chase', 'Escape'];\n\n    this.choice = 0;\n\n    let title = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 4,\n      'Settings',\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize1\n      }\n    );\n    title.setOrigin(0.5, 0.5);\n    let gridSize = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 8,\n      `Grid size: ${this.settings.gridSize}`,\n      {\n        fontFamily: 'Ubuntu',\n        fill: GOLD,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    gridSize.setOrigin(0.5, 0.5);\n    let sideLength = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 11,\n      `Side length: ${this.settings.sideLength}`,\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    sideLength.setOrigin(0.5, 0.5);\n    let gameMode = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 14,\n      this.gameModes[this.settings.gameMode],\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    gameMode.setOrigin(0.5, 0.5);\n    let menuReturn = this.add.text(\n      this.gameDimensions.screenCenter,\n      this.gameDimensions.screenSpaceUnit * 17,\n      'Return',\n      {\n        fontFamily: 'Ubuntu',\n        fill: BLACK,\n        fontSize: this.gameDimensions.textSize3\n      }\n    );\n    menuReturn.setOrigin(0.5, 0.5);\n\n    this.options = [gridSize, sideLength, gameMode, menuReturn];\n  }\n\n  update() {\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.up) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowUp)\n    ) {\n      this.updateChoice(-1);\n    }\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.down) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowDown)\n    ) {\n      this.updateChoice(1);\n    }\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.right) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowRight)\n    ) {\n      this.updateSelection(1);\n    }\n    if (\n      Phaser.Input.Keyboard.JustDown(this.keys.left) ||\n      Phaser.Input.Keyboard.JustDown(this.keys.arrowLeft)\n    ) {\n      this.updateSelection(-1);\n    }\n    if (Phaser.Input.Keyboard.JustDown(this.keys.select)) {\n      if (this.choice === 3) {\n        this.scene.start('MainMenu', this.settings);\n      }\n    }\n  }\n\n  updateChoice(direction) {\n    let newChoice = this.choice + direction;\n    if (newChoice > -1 && newChoice < this.options.length) {\n      this.options[this.choice].setFill(BLACK);\n      this.options[newChoice].setFill(GOLD);\n      this.choice = newChoice;\n    }\n  }\n\n  updateSelection(direction) {\n    if (this.choice === 0) {\n      this.updateGridSize(direction);\n    } else if (this.choice === 1) {\n      this.updateSideLength(direction);\n    } else if (this.choice === 2) {\n      this.updateGameMode(direction);\n    }\n  }\n\n  updateGridSize(direction) {\n    let newGridSize = this.settings.gridSize + direction;\n    if (\n      newGridSize > this.settings.minGridSize - 1 &&\n      newGridSize < this.settings.maxGridSize + 1\n    ) {\n      this.options[0].setText(`Grid size: ${newGridSize}`);\n      this.settings.gridSize = newGridSize;\n    }\n  }\n\n  updateSideLength(direction) {\n    let newSideLength = this.settings.sideLength + direction;\n    if (\n      newSideLength > this.settings.minSideLength - 1 &&\n      newSideLength < this.settings.maxSideLength + 1\n    ) {\n      this.options[1].setText(`Side length: ${newSideLength}`);\n      this.settings.sideLength = newSideLength;\n    }\n  }\n\n  updateGameMode(direction) {\n    let newGameMode = this.settings.gameMode + direction;\n    if (newGameMode > -1 && newGameMode < this.gameModes.length) {\n      this.options[2].setText(this.gameModes[newGameMode]);\n      this.settings.gameMode = newGameMode;\n    }\n  }\n}\n","import React from 'react';\nimport Phaser from 'phaser';\nimport Movement from './Scenes/Movement';\nimport MainMenu from './Scenes/MainMenu';\nimport Settings from './Scenes/Settings';\n\nexport default class Game extends React.Component {\n  componentDidMount() {\n    const dimension = this._getDimensions();\n    const config = {\n      type: Phaser.AUTO,\n      parent: 'phaser-parent',\n      pixelArt: true,\n      width: dimension * 0.8,\n      height: dimension * 0.8,\n      physics: {\n        default: 'arcade',\n        arcade: {\n          gravity: { y: 200 }\n        }\n      },\n      scene: [MainMenu, Movement, Settings]\n    };\n\n    new Phaser.Game(config);\n  }\n\n  /**\n   * Returns the smaller of window.innerWidth and window.innerHeight\n   */\n  _getDimensions() {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    if (width < height) {\n      return width;\n    } else {\n      return height;\n    }\n  }\n\n  render() {\n    return <div id=\"phaser-parent\" />;\n  }\n}\n","import React, { Component } from 'react';\nimport Game from '../Phaser/Game';\nimport { Grid } from '@material-ui/core/';\n\nclass MazeGamePage extends Component {\n  render() {\n    return (\n      <Grid style={{ padding: 25 }}>\n        {/* <Typography variant=\"h2\" gutterBottom>\n          Maze Game\n        </Typography> */}\n        <Game />\n      </Grid>\n    );\n  }\n}\n\nexport default MazeGamePage;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport MazeGamePage from './pages/MazeGamePage';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/game\" component={MazeGamePage} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const BLACK = '#000000';\nconst GOLD = '#f9a602';\nconst WHITE = '#ffffff';\nconst GRAY = '#cccccc';\n\nmodule.exports = {\n  BLACK,\n  GOLD,\n  GRAY,\n  WHITE\n};\n"],"sourceRoot":""}